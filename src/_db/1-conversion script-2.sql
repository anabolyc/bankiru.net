USE BankBals2
GO

ALTER PROCEDURE [dbo].[CALC_DK_BANKS_COMP_DATE] @Date DATE AS
--DECLARE @DATE DATE = '2013-04-01'
SET NOCOUNT ON
PRINT(CAST(GETDATE() AS NVARCHAR(MAX)) + ':' + 'CALC BANKSMEASURE AS OF ' + CAST(@DATE AS NVARCHAR(20)))--Init def string
DECLARE @Timer00 DATETIME=GETDATE(), @Timer0 DATETIME=GETDATE(), @TimerStr NVARCHAR(MAX), @BlockStr NVARCHAR(MAX); --Initilize Timer
--INIT
DECLARE @DateID INT=DBO.CALC_DATE2DATEID(@Date)

CREATE TABLE #DATA (
	BankID INT NOT NULL,
	Ticker NVARCHAR(30) NULL,
	DateID INT NOT NULL,
	Value [decimal](28, 8) null
) 
CREATE TABLE #DATAPIV (
	BankID INT NOT NULL,
	CorpAss [decimal](28, 8) NULL,
	IndAss [decimal](28, 8) NULL,
	CorpLiab [decimal](28, 8) NULL,
	IndLiab [decimal](28, 8) NULL,
	EntAss [decimal](28, 8) NULL,
	NResAss [decimal](28, 8) NULL,
	SecAss [decimal](28, 8) NULL,
	TotAss [decimal](28, 8) NULL,
	CorpAssU [decimal](28, 8) NULL,
	IndAssU [decimal](28, 8) NULL,
	CorpLiabU [decimal](28, 8) NULL,
	IndLiabU [decimal](28, 8) NULL,
	EntAssU [decimal](28, 8) NULL,
	NResAssU [decimal](28, 8) NULL,
	SecAssU [decimal](28, 8) NULL,
	TotAssU [decimal](28, 8) NULL
)
CREATE TABLE #STDEVPIV (
	CorpAss [decimal](28, 8) NULL,
	IndAss [decimal](28, 8) NULL,
	CorpLiab [decimal](28, 8) NULL,
	IndLiab [decimal](28, 8) NULL,
	EntAss [decimal](28, 8) NULL,
	NResAss [decimal](28, 8) NULL,
	SecAss [decimal](28, 8) NULL,
	TotAss [decimal](28, 8) NULL
)
--LIST OF BANKS
SELECT BankID, DateID, TotalAssets
INTO #BANKS
FROM dbo.DK_TOPBANKS A
WHERE DateID=(SELECT MAX(DateID) FROM DK_TOPBANKS B WHERE DateID BETWEEN DATEADD(MONTH, -5, @DateID) AND @DateID) AND BankID>0
--UNION
INSERT #DATA(BankID, DateID, Ticker, Value)
SELECT BankID, DateID, Ticker='TotAss', Value=(TotalAssets)
FROM #BANKS
UNION ALL
SELECT B.BankID, B.DateID, Ticker='CorpAss', Value=Value
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=22004
UNION ALL
SELECT B.BankID, B.DateID, Ticker='IndAss', Value=ISNULL(Value/1., 0)
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=22003
UNION ALL
SELECT B.BankID, B.DateID, Ticker='CorpLiab', Value=ISNULL(Value/1., 0)
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=30400
UNION ALL
SELECT B.BankID, B.DateID, Ticker='IndLiab', Value=ISNULL(Value/1., 0)
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=30420
UNION ALL
SELECT B.BankID, B.DateID, Ticker='EntAss', Value=ISNULL(Value/1., 0)
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=5730
UNION ALL
SELECT B.BankID, B.DateID, Ticker='NResAss', Value=ISNULL(Value/1., 0)
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=30731
UNION ALL
SELECT B.BankID, B.DateID, Ticker='SecAss', Value=ISNULL(Value/1., 0)
FROM #BANKS B
	LEFT JOIN
	DK_F101 DK ON B.BankID=DK.BankID AND B.DateID=DK.DateID AND DK.AggItemID=30310
--CALC StDev
SELECT Ticker, StDev=STDEV(Value)
INTO #STDEV
FROM 
	(
	SELECT Ticker, Value, ValueCount=COUNT(*) OVER (PARTITION BY Ticker), RNAsc=ROW_NUMBER() OVER (PARTITION BY Ticker ORDER BY Value ASC)
	FROM #DATA A
	) A
--WHERE RNAsc BETWEEN ValueCount/4. AND ValueCount*3./4.--В случае отрезания межквартильного диапазона
GROUP BY Ticker
--MAKE DATA PIVOT
INSERT #DATAPIV(BankID, CorpAss, IndAss, CorpLiab, IndLiab, EntAss, NResAss, SecAss, TotAss)
SELECT BankID, ISNULL(CorpAss, 0), ISNULL(IndAss, 0), ISNULL(CorpLiab, 0), ISNULL(IndLiab, 0), ISNULL(EntAss, 0), ISNULL(NResAss, 0), ISNULL(SecAss, 0), ISNULL(TotAss, 0)
FROM #DATA A
PIVOT
(
MIN(Value) FOR Ticker IN ([CorpAss], [IndAss], [CorpLiab], [IndLiab], [EntAss], [NResAss], [SecAss], [TotAss])
) P

INSERT #STDEVPIV(CorpAss, IndAss, CorpLiab, IndLiab, EntAss, NResAss, SecAss, TotAss)
SELECT CorpAss, IndAss, CorpLiab, IndLiab, EntAss, NResAss, SecAss, TotAss
FROM #STDEV A
PIVOT
(
MIN(StDev) FOR Ticker IN ([CorpAss], [IndAss], [CorpLiab], [IndLiab], [EntAss], [NResAss], [SecAss], [TotAss])
) P
--NORMALIZE
UPDATE DP
SET CorpAssU=DP.CorpAss/SD.CorpAss, IndAssU=DP.IndAss/SD.IndAss, CorpLiabU=DP.CorpLiab/SD.CorpLiab, IndLiabU=DP.IndLiab/SD.IndLiab, EntAssU=DP.EntAss/SD.EntAss, NResAssU=DP.NResAss/SD.NResAss, SecAssU=DP.SecAss/SD.SecAss, TotAssU=DP.TotAss/SD.TotAss
FROM #DATAPIV DP
	CROSS JOIN 
	#STDEVPIV SD
--INSERT FINAL
DELETE FROM DK_BANKS_COMP WHERE DateID=@DateID
--
INSERT DK_BANKS_COMP(DateID, BankID, Num, BankIDCompare, Dev)
SELECT @DateID, BankID1, RN=ROW_NUMBER() OVER (PARTITION BY BankID1 ORDER BY Dev), BankID2, Dev
FROM 
	(
	SELECT BankID1=A.BankID, BankID2=B.BankID, Dev=SQRT(POWER(A.CorpAssU-B.CorpAssU, 2) + POWER(A.IndAssU-B.IndAssU, 2) + POWER(A.CorpLiabU-B.CorpLiabU, 2) + POWER(A.IndLiabU-B.IndLiabU, 2) + POWER(A.EntAssU-B.EntAssU, 2) + POWER(A.NResAssU-B.NResAssU, 2) + POWER(A.SecAssU-B.SecAssU, 2) + POWER(A.TotAssU-B.TotAssU, 2))
		, A.TotAss
	FROM #DATAPIV A
		JOIN 
		#DATAPIV B ON A.BankID!=B.BankID
	) A
ORDER BY TotAss DESC, Dev

BEGIN TRAN T1;

TRUNCATE TABLE W_BANKS_COMP_LAST

INSERT W_BANKS_COMP_LAST(BankID, BankIDC1, BankIDC2)
SELECT COMP1.BankID, BankIDC1=COMP1.BankIDCompare, BankIDC2=COMP2.BankIDCompare
FROM
	(SELECT BankID, DateID=MAX(DateID) FROM DK_BANKS_COMP GROUP BY BankID) MAXDATE
	JOIN 
	DK_BANKS_COMP COMP1 ON MAXDATE.BankID=COMP1.BankID AND MAXDATE.DateID=COMP1.DateID AND COMP1.Num=1
	JOIN 
	DK_BANKS_COMP COMP2 ON MAXDATE.BankID=COMP2.BankID AND MAXDATE.DateID=COMP2.DateID AND COMP2.Num=2

COMMIT TRAN T1;

TRUNCATE TABLE DK_BANKS_COMP

DROP TABLE #DATA
DROP TABLE #DATAPIV
DROP TABLE #STDEVPIV
DROP TABLE #STDEV
DROP TABLE #BANKS

SET @BlockStr='All';SET @TimerStr=CAST(CAST(DATEDIFF(ms, @Timer00, GETDATE()) /1000. AS DECIMAL(6,2)) AS NVARCHAR);PRINT(LEFT(@BlockStr, 20) + REPLICATE(' ',20-LEN(LEFT(@BlockStr, 20))) + ':' + REPLICATE(' ',8-LEN(LEFT(@TimerStr, 8))) + @TimerStr + ' sec;')--Timer All

GO

-- EXEC [CALC_DK_ALL_ASYNC] '2014-06-01'
CREATE PROCEDURE [dbo].[CALC_DK_ALL_ASYNC] @STARTDATE AS DATE = NULL, @DATEA AS DATE = NULL AS

SET NOCOUNT ON;
TRUNCATE TABLE W_TASK

DECLARE @DATE DATE
DECLARE @DATES NVARCHAR(20)
DECLARE @NEWAGE DATE = ISNULL(@STARTDATE, (SELECT NewAgeDate FROM NEWAGE_DATE))
SET @DATEA = ISNULL(@DATEA, (SELECT NewAgeDate FROM NEWAGE_DATE))

EXEC FILL_A_DATE
EXEC MAKE_SOURCELIST_F101
EXEC MAKE_SOURCELIST_F102
EXEC MAKE_SOURCELIST_F123
EXEC MAKE_SOURCELIST_F134
EXEC MAKE_SOURCELIST_F135
EXEC FILL_A_DATE

DECLARE IndC CURSOR DYNAMIC FOR 
SELECT DATE FROM A_DATE WHERE DATE>=@NEWAGE 
ORDER BY DATE	
	
OPEN IndC
FETCH FIRST FROM IndC INTO @DATE
WHILE @@FETCH_STATUS = 0 
BEGIN
    SET @DATES = ' ''' + CAST(@Date AS NVARCHAR(20)) + ''''
    
    INSERT INTO W_TASK(Command) VALUES 
    ('EXEC CALC_DK_F101_DATE' + @DATES + ', ''101:MAIN''')
    
    IF @Date >= @DATEA
	   INSERT INTO W_TASK(Command) VALUES 
	   ('EXEC CALC_DK_F101_DATE' + @DATES + ', ''101:A''')
	   , ('EXEC CALC_DK_F101_DATE' + @DATES + ', ''101:A:TO1''')
	   , ('EXEC CALC_DK_F101_DATE' + @DATES + ', ''101:A:TO2''')
    
    INSERT INTO W_TASK(Command) VALUES 
    ('EXEC CALC_DK_F101_STAT_DATE' + @DATES),
    ('EXEC CALC_DK_BANKS_COMP_DATE' + @DATES),
    ('EXEC CALC_DK_F102_DATE' + @DATES + ', ''102:MAIN''')
    
    IF @Date >= @DATEA
	   INSERT INTO W_TASK(Command) VALUES 
	   ('EXEC CALC_DK_F102_DATE' + @DATES + ', ''102:A''')
    
    INSERT INTO W_TASK(Command) VALUES 
    ('EXEC CALC_DK_F123_DATE' + @DATES),
    ('EXEC CALC_DK_F134_DATE' + @DATES),
    ('EXEC CALC_DK_F135_DATE' + @DATES)
    
    FETCH NEXT FROM IndC INTO @DATE
END
CLOSE IndC
DEALLOCATE IndC

SET @DATE = (SELECT MAX(Date) FROM DI_CBR_BALS_F101_DATA)
SET @DATES = ' ''' + CAST(@Date AS NVARCHAR(20)) + ''''

INSERT INTO W_TASK(Command) VALUES
('EXEC CALC_W_AGG_COMP' + @DATES)

DECLARE @AGGDATE DATE = (SELECT AggDate FROM AGG_DATE)

DELETE FROM DK_F101 WHERE BankID < 0 AND DateID<DBO.CALC_DATE2DATEID(@AGGDATE)

DECLARE IndC CURSOR DYNAMIC FOR 
SELECT DATE FROM A_DATE WHERE DATE>=@AGGDATE 
ORDER BY DATE

OPEN IndC
FETCH FIRST FROM IndC INTO @DATE
WHILE @@FETCH_STATUS = 0 
BEGIN
    SET @DATES = ' ''' + CAST(@Date AS NVARCHAR(20)) + ''''
    INSERT INTO W_TASK(Command) VALUES 
    ('EXEC CALC_DK_F101_AGG_DATE' + @DATES)
    FETCH NEXT FROM IndC INTO @DATE
END
CLOSE IndC
DEALLOCATE IndC

DECLARE IndC CURSOR DYNAMIC FOR 
SELECT DATE FROM A_DATE WHERE DATE>=@AGGDATE AND IsQuartal=1
ORDER BY DATE

OPEN IndC
FETCH FIRST FROM IndC INTO @DATE
WHILE @@FETCH_STATUS = 0 
BEGIN
    SET @DATES = ' ''' + CAST(@Date AS NVARCHAR(20)) + ''''
    INSERT INTO W_TASK(Command) VALUES 
    ('EXEC CALC_DK_F102_AGG_DATE' + @DATES)
    FETCH NEXT FROM IndC INTO @DATE
END
CLOSE IndC
DEALLOCATE IndC

DECLARE IndC CURSOR DYNAMIC FOR 
SELECT DATE FROM A_DATE WHERE DATE>=@AGGDATE
ORDER BY DATE

OPEN IndC
FETCH FIRST FROM IndC INTO @DATE
WHILE @@FETCH_STATUS = 0 
BEGIN
    SET @DATES = ' ''' + CAST(@Date AS NVARCHAR(20)) + ''''
    INSERT INTO W_TASK(Command) VALUES 
    ('EXEC CALC_DK_F134_AGG_DATE' + @DATES)
    FETCH NEXT FROM IndC INTO @DATE
END
CLOSE IndC
DEALLOCATE IndC


INSERT INTO W_TASK(Command) VALUES 
('EXEC MAKE_HELP')

SELECT * FROM W_TASK
